{"version":3,"sources":["assets/girl-studying-book.svg","pages/landingPage/components/Hero.js","assets/trophy.svg","pages/landingPage/components/Toppers.js","assets/login.svg","pages/landingPage/components/Login.js","assets/my-pic.jpg","pages/landingPage/components/MyProfile.js","pages/Home.js","pages/authPages/StudentDashboard.js","assets/GNITLogo.jpg","pages/landingPage/components/NavBar.js","pages/authPages/components/TeachersDashboard.js","pages/authPages/components/UploadMarks.js","pages/authPages/Teachers.js","pages/authPages/dataForPages.js","pages/authPages/AccountSignUp.js","pages/authPages/components/DataShowingTable.js","pages/authPages/components/Admin.js","pages/authPages/Admin.js","pages/App.js","reportWebVitals.js","index.js"],"names":["Hero","className","title","src","girlStudyingBookImage","alt","Toppers","trophy","Login","setUserLoginCredentials","useState","userName","setUserName","userPassword","setUserPassword","route","setRoute","routing","useHistory","loginInputBox","fieldName","type","setStateHook","e","credentials","a","params","method","headers","Accept","body","JSON","stringify","fetch","response","json","responeJson","id","password","console","log","push","map","index","charAt","toUpperCase","slice","onChange","value","target","name","onClick","queryLogin","login","MyProfile","myPic","Home","useContext","setUserLoginCredentialsContext","StudentDashboard","userLoginCredentials","userLoginCredentialsContext","variant","colorScheme","size","Object","entries","subject","marks","pretifiedSubjects","split","NavBar","logo","href","TeachersDashboard","to","studentList","property","UploadMarks","studentName","setStudentName","studentID","setStudentID","studentMarks","setStudentMarks","isOpen","setIsOpen","isSuccessfulAndMessage","setIsSuccessfulAndMessage","cancelRef","useRef","onClose","studentdetailsObject","student","description","status","leastDestructiveRef","fontSize","fontWeight","ref","width","spacing","marginBottom","border","boxSizing","direction","loadingText","uploadStudentMarks","Teachers","match","path","component","semestersAndSubjects","semester","subjects","branches","AccountSignUp","isStudent","setIsStudent","semesterIndex","setSemesterIndex","userID","setUserId","userSemester","setUserSemester","userBranchOrSubject","setUserBranchOrSubject","isChecked","setIsChecked","subjectRef","branchRef","dropDowns","allUserInputFieldsValues","allUserInputFieldStateHooks","userObject","user","placeholder","padding","isDisabled","filter","length","alert","createUserAccount","current","options","selectedIndex","DataShowingTable","data","tableHeader","branch","AdminDashboard","setSemester","setTableHeader","dataObject","setDataObject","tabLists","useEffect","fetchRecords","responseJson","students","teachers","Promise","resolve","fetchData","focus","align","isFullWidth","_focus","color","bg","_selected","innerHTML","Admin","createContext","App","Provider","undefined","isUser","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4bcf2093.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/girl-studying-book.03cce87e.svg\";","import React from \"react\";\nimport girlStudyingBookImage from \"../../../assets/girl-studying-book.svg\";\nfunction Hero() {\n  return (\n    <div className=\"Hero flex__container\" title=\"Hero\">\n      <div className=\"Hero__quote\" title=\"Hero_Quote\">\n        <q><cite>\n          Life is like riding a bicycle. To keep your balance you must keep\n          moving.\n        </cite>\n        </q>\n        ~Albert Einstein \n      </div>\n      <div className=\"Hero__image\" title=\"Hero_Image\">\n            <img src={girlStudyingBookImage} alt=\"Girl Studying Book\"/>\n      </div>\n    </div>\n  );\n}\n\nexport default Hero;\n","export default __webpack_public_path__ + \"static/media/trophy.e4fa4e4a.svg\";","import React from \"react\";\nimport trophy from \"../../../assets/trophy.svg\";\nfunction Toppers() {\n  return (\n    <div className=\"Toppers flex__container\" title=\"Toppers\">\n      <div className=\"Toppers__image\" title=\"Toppers__image\">\n        <img src={trophy} alt=\"Trophy\" />\n      </div>\n      <div className=\"Toppers__list\" title=\"toppers_list\">\n         <span className=\"vertical__line\"></span>\n      </div>\n    </div>\n  );\n}\n\nexport default Toppers;\n","export default __webpack_public_path__ + \"static/media/login.753498d3.svg\";","import { useHistory } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport login from \"../../../assets/login.svg\";\n\nfunction Login({ setUserLoginCredentials }) {\n  const roles = [\"Student\", \"Teacher\", \"Admin\"];\n  const [userName, setUserName] = useState(null);\n  const [userPassword, setUserPassword] = useState(null);\n  const [route, setRoute] = useState(null);\n  const routing = useHistory();\n  const loginInputBox = [\n    {\n      fieldName: \"username\",\n      type: \"text\",\n      setStateHook(e) {\n        setUserName(e);\n      },\n    },\n    {\n      fieldName: \"password\",\n      type: \"password\",\n      setStateHook(e) {\n        setUserPassword(e);\n      },\n    },\n  ];\n  async function queryLogin(credentials) {\n    const params = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify(credentials),\n    };\n    try {\n      const response = await fetch(\n        `http://localhost:5000/${route}/dashboard`,\n        params\n      );\n      const responeJson = await response.json();\n      setUserLoginCredentials({\n        route,\n        body: responeJson,\n        id: credentials.id,\n        password: credentials.password,\n      });\n      console.log(\"response is: \", responeJson);\n    } catch (error) {\n      routing.push(\"/\");\n    }\n  }\n  return (\n    <div className=\"Login flex__container\" title=\"Login\">\n      <div className=\"Login__box flex__container\" title=\"Login_Box\">\n        <span>LOGIN</span>\n        <span className=\"horizontal__line\"></span>\n        {loginInputBox.map((e, index) => {\n          const FIRST_LETTER_INDEX = 0;\n          const REST_OF_THE_WORD_STARTING_INDEX = 1;\n          return (\n            <div className={`${e.fieldName}__field`} key={index}>\n              <span>{`${e.fieldName\n                .charAt(FIRST_LETTER_INDEX)\n                .toUpperCase()}${e.fieldName.slice(\n                REST_OF_THE_WORD_STARTING_INDEX\n              )}`}</span>\n              <input\n                type={e.type}\n                onChange={(value) => e.setStateHook(value.target.value)}\n              />\n            </div>\n          );\n        })}\n        <div className=\"role__field\">\n          <span>Who you are ?</span>\n          {roles.map((e, index) => {\n            return (\n              <div id={e} key={index}>\n                <input type=\"checkbox\" name={e} onClick={() => setRoute(e)} />\n                <span>{e}</span>\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"Login__button flex__container\">\n          <button\n            type=\"submit\"\n            onClick={() => {\n              if (!userName || !userPassword || !route) {\n                console.log(\"username or password or route is null\");\n                console.log(\"user name is: \", userName);\n                console.log(\"user password is: \", userPassword);\n                console.log(\"can't login\");\n                return;\n              }\n              queryLogin({\n                id: userName,\n                password: userPassword,\n              });\n              routing.push(`${route}/dashboard`);\n            }}\n          >\n            Login\n          </button>\n        </div>\n      </div>\n      <div className=\"Login__image\" title=\"Login_Image\">\n        <img src={login} alt=\"Login svg\" />\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","export default __webpack_public_path__ + \"static/media/my-pic.a4634a09.jpg\";","import React from \"react\";\nimport myPic from \"../../../assets/my-pic.jpg\";\n\nfunction MyProfile() {\n  return (\n    <div className=\"Profile flex__container\" title=\"Profile\">\n          <h3 title=\"heading\">Developed By</h3>\n      <div className=\"Profile__mine flex__container\" title=\"Profile_me\">\n        <div className=\"about__me flex__container\" title=\"about_me\">\n          <p>\n            \"A passionte developer,\n            <br /> <span></span>\n            who loves to create innovations\"\n          </p>\n        </div>\n        <div className=\"mine__photo flex__container\">\n          <img src={myPic} alt=\"My Pic\" title=\"mine_pic\" />\n          <p title=\"my_name\">Rishabh Raghwendra</p>\n          <q title=\"title\">CSE Student,GNIT</q>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MyProfile;\n","import React, { useContext } from \"react\";\nimport Hero from \"./landingPage/components/Hero\";\nimport Toppers from \"./landingPage/components/Toppers\";\nimport Login from \"./landingPage/components/Login\";\nimport MyProfile from \"./landingPage/components/MyProfile\";\nimport { setUserLoginCredentialsContext } from \"./App\";\n\nfunction Home() {\n  const setUserLoginCredentials=useContext(setUserLoginCredentialsContext);\n  return (\n    <div className=\"Home\" title=\"Home\">\n      <Hero />\n      <Toppers />\n      <Login setUserLoginCredentials={setUserLoginCredentials} />\n      <MyProfile />\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useContext } from \"react\";\nimport {\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n  TableCaption,\n} from \"@chakra-ui/react\";\nimport { userLoginCredentialsContext } from \"../App\";\n\nfunction StudentDashboard() {\n  const userLoginCredentials = useContext(userLoginCredentialsContext);\n  return (\n    <div className=\"StudentDashBoard flex__container\">\n      <div className=\"StudentDashBoard__marksDiv\">\n        <div className=\"studentDetailsAndSemesters\">\n          <div>\n            <p>ID: {userLoginCredentials.body.id}</p>\n          </div>\n        </div>\n        <div className=\"verticalLine\"></div>\n        <Table variant=\"simple\" colorScheme=\"black\" size=\"lg\">\n          <TableCaption>nulls: marks has not been uploaded</TableCaption>\n          <Thead>\n            <Tr>\n              <Th>subject</Th>\n              <Th>Marks</Th>\n            </Tr>\n          </Thead>\n          <Tbody>\n            {Object.entries(userLoginCredentials.body).map( // eslint-disable-next-line\n              ([subject, marks]) => {\n                if (subject !== \"id\") {\n                  const pretifiedSubjects = subject.split(\"_\");\n                  return (\n                    <Tr>\n                      <Td>\n                        {pretifiedSubjects.map(\n                          (e) => e.charAt(0).toUpperCase() + e.slice(1) + \" \"\n                        )}\n                      </Td>\n                      <Td>{marks ? marks : \"null\"}</Td>\n                    </Tr>\n                  );\n                }\n              }\n            )}\n          </Tbody>\n        </Table>\n      </div>\n    </div>\n  );\n}\n\nexport default StudentDashboard;\n","export default __webpack_public_path__ + \"static/media/GNITLogo.b886bf4c.jpg\";","import React from \"react\";\nimport logo from \"../../../assets/GNITLogo.jpg\";\n\nfunction NavBar() {\n  return (\n    <nav title=\"NavBar\">\n      <img src={logo} alt=\"Logo\" title=\"navbar_logo\"/>\n      <div>\n      {/* eslint-disable-next-line */}\n        <a href=\"#\" title=\"home_anchor_tag\">Home</a>\n        {/* <Link to=\"/studentdashboard\">\n          Home\n        </Link> */}\n         {/* eslint-disable-next-line */}\n        <a href=\"#\" title=\"login_anchor_tag\">Login</a>\n        {/* eslint-disable-next-line */}\n        <a href=\"#\" title=\"contact_anchor_tag\">Contact Us</a>\n      </div>\n    </nav>\n  );\n}\n\nexport default NavBar;\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Table, Thead, Tbody, Tr, Th, Td } from \"@chakra-ui/react\";\nimport { userLoginCredentialsContext } from \"../../App\";\n\nfunction TeachersDashboard() {\n  const userLoginCredentials = useContext(userLoginCredentialsContext);\n  return (\n    <div className=\"TeachersDashboard flex__container\">\n      <Link to={\"/teacher/uploadmarks\"}>\n        <button className=\"uploadButton\">Upload Marks</button>\n      </Link>\n      <div className=\"dashboard\">\n        <div className=\"teacherInformation\">\n          <p>{userLoginCredentials.body.id}</p>\n        </div>\n        <div className=\"teachersStudentMarks\">\n          <Table variant=\"simple\" colorScheme=\"black\" size=\"lg\">\n            <Thead>\n              <Tr>\n                <Th>Student ID</Th>\n                <Th>Student Name</Th>\n                <Th>Student Branch</Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {userLoginCredentials.body.map((e) => {\n                const studentList = [];\n                for (const property in e) {\n                  studentList.push(\n                        <Td>{e[property]}</Td>\n                  )\n                }\n                return(\n                      <Tr>\n                            {studentList.map(e=>e)}\n                      </Tr>\n                )\n              })}\n            </Tbody>\n          </Table>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TeachersDashboard;\n","import React, { useState, useContext, useRef } from \"react\";\nimport {\n  Button,\n  Input,\n  FormControl,\n  FormLabel,\n  HStack,\n  Stack,\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogContent,\n  AlertDialogOverlay,\n  Alert,\n  AlertIcon,\n} from \"@chakra-ui/react\";\nimport { userLoginCredentialsContext } from \"../../App\";\n\nfunction UploadMarks() {\n  const [studentName, setStudentName] = useState('');\n  const [studentID, setStudentID] = useState('');\n  const [studentMarks, setStudentMarks] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [isSuccessfulAndMessage,setIsSuccessfulAndMessage]=useState();\n  const cancelRef = useRef();\n  const userLoginCredentials = useContext(userLoginCredentialsContext);\n\n  const onClose=() => setIsOpen(false);\n\n  async function uploadStudentMarks(studentdetailsObject) {\n    const params = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        id: userLoginCredentials.id,\n        password: userLoginCredentials.password,\n        student: studentdetailsObject.student,\n      }),\n    };\n    try {\n      const response = await fetch(\n        \"http://localhost:5000/teacher/uploadmarks\",\n        params\n      );\n      const responeJson = await response.json();\n      console.log(\"response on uploading is: \", responeJson.description);\n      setIsSuccessfulAndMessage({\n        status:responeJson.status,\n        description:responeJson.description,\n      })\n      setIsOpen(true);\n    } catch (error) {\n      console.log(\"error on uploading: \", error);\n    }\n  }\n\n  return (\n    <div className=\"UploadMarks flex__container\">\n      <AlertDialog\n        isOpen={isOpen}\n        leastDestructiveRef={cancelRef}\n        onClose={onClose}\n      >\n        <AlertDialogOverlay>\n          <AlertDialogContent>\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n              {isSuccessfulAndMessage?.status===200?'Successfully!':'Error!'}\n            </AlertDialogHeader>\n            <AlertDialogBody>\n              <Alert status={isSuccessfulAndMessage?.status===200?'success':'error'}>\n                <AlertIcon />\n                {isSuccessfulAndMessage?.status===200?'Marks Uploaded':`Error: ${isSuccessfulAndMessage?.description}`}\n              </Alert>\n            </AlertDialogBody>\n            <AlertDialogFooter>\n              <Button ref={cancelRef} onClick={onClose}>\n                Close\n              </Button>\n            </AlertDialogFooter>\n          </AlertDialogContent>\n        </AlertDialogOverlay>\n      </AlertDialog>\n      <div className=\"Form\">\n        <FormControl width=\"50%\">\n          <HStack spacing=\"24px\" marginBottom=\"1rem\">\n            <FormLabel fontSize=\"1.5rem\">Name</FormLabel>\n            <Input\n              type=\"text\"\n              border=\"6px solid black\"\n              boxSizing=\"border-box\"\n              value={studentName}\n              onChange={(e) => setStudentName(e.target.value)}\n            ></Input>\n          </HStack>\n          <HStack spacing=\"24px\" marginBottom=\"1rem\">\n            <FormLabel fontSize=\"1.5rem\" boxSizing=\"border-box\">\n              ID\n            </FormLabel>\n            <Input\n              type=\"text\"\n              border=\"6px solid black\"\n              boxSizing=\"border-box\"\n              value={studentID}\n              onChange={(e) => setStudentID(e.target.value)}\n            ></Input>\n          </HStack>\n          <HStack spacing=\"24px\" marginBottom=\"1rem\">\n            <FormLabel fontSize=\"1.5rem\">Subject Marks</FormLabel>\n            <Input\n              type=\"number\"\n              border=\"6px solid black\"\n              boxSizing=\"border-box\"\n              value={studentMarks}\n              onChange={(e) => setStudentMarks(e.target.value)}\n            ></Input>\n          </HStack>\n          <Stack spacing=\"23px\" marginBottom=\"1rem\" direction=\"row\">\n            <Button\n              loadingText=\"Submitting\"\n              colorScheme=\"blue\"\n              fontSize=\"1.5rem\"\n              onClick={() => {\n                if(!studentName || !studentID || !studentMarks){\n                  setIsSuccessfulAndMessage({\n                    status:500,\n                    description:'Please enter student/id/marks',\n                  });\n                  setIsOpen(true);\n                  return;\n                }\n                const marksObject = {\n                  student: {\n                    name: studentName,\n                    id: studentID,\n                    marks: studentMarks,\n                  },\n                };\n                uploadStudentMarks(marksObject);\n              }}\n            >\n              Upload Marks\n            </Button>\n            <Button\n              loadingText=\"Submitting\"\n              colorScheme=\"red\"\n              fontSize=\"1.5rem\"\n              onClick={()=>{\n                setStudentName('');\n                setStudentMarks('');\n                setStudentID('');\n              }}\n            >\n              Cancel\n            </Button>\n          </Stack>\n        </FormControl>\n      </div>\n    </div>\n  );\n}\n\nexport default UploadMarks;\n","import React from 'react'\nimport {BrowserRouter,Switch, Route} from 'react-router-dom';\nimport TeachersDashboard from \"./components/TeachersDashboard\";\nimport UploadMarks from \"./components/UploadMarks\";\n\nfunction Teachers({match}) {\n      return (\n            <BrowserRouter>\n            <Switch>\n                  <Route path=\"/teacher/uploadmarks\" component={UploadMarks}/>\n                  <Route path=\"/\" component={TeachersDashboard}/>\n            </Switch>\n            </BrowserRouter>\n      )\n}\n\nexport default Teachers\n","export const semestersAndSubjects = [\n  {\n    semester: \"sem1\",\n    subjects: [\n      \"applied_mathematics\",\n      \"applied_physics\",\n      \"manufacturing_processes\",\n      \"electrical_technology\",\n      \"human_values_and_professional_ethics\",\n      \"fundamentals_of_computing\",\n      \"applied_chemistry\",\n    ],\n  },\n  {\n    semester: \"sem2\",\n    subjects: [\n      \"applied_mathematics\",\n      \"applied_physics\",\n      \"electronic_devices\",\n      \"introduction_to_programming\",\n      \"engineering_mechanics\",\n      \"communication_skills\",\n      \"environmental_studies\",\n    ],\n  },\n  {\n    semester: \"sem3\",\n    subjects: [\n      \"applied_mathematics\",\n      \"foundation_of_computer_science\",\n      \"switching_theory_and_logic_design\",\n      \"circuits_and_system\",\n      \"data_structure\",\n      \"computer_graphics_and_multimedia\",\n    ],\n  },\n  {\n    semester: \"sem4\",\n    subjects: [\n      \"applied_mathematics\",\n      \"computer_organization_and_architecture\",\n      \"theory_of_computation\",\n      \"database_management_systems\",\n      \"object_oriented_programming\",\n      \"communication_systems\",\n    ],\n  },\n  {\n    semester: \"sem5\",\n    subjects: [\n      \"algorithms_design_and_analysis\",\n      \"software_engineering\",\n      \"java_programming\",\n      \"industrial_management\",\n      \"digital_communication\",\n      \"communication_skills_for_professionals\",\n    ],\n  },\n  {\n    semester: \"sem6\",\n    subjects: [\n      \"compiler_design\",\n      \"operating_systems\",\n      \"computer_networks\",\n      \"web_technology\",\n      \"artificial_intelligence\",\n      \"microprocessor_and_microcontroller\",\n    ],\n  },\n  {\n    semester: \"sem7\",\n    subjects: [\n      \"information_security\",\n      \"software_testing_and_quality_assurance\",\n      \"wireless_communication\",\n    ],\n  },\n  {\n    semester: \"sem8\",\n    subjects: [\n      \"mobile_computing\",\n      \"machine_learning\",\n      \"human_values_and_professional_ethics\",\n    ],\n  },\n];\nexport const branches=[\"CSE\",\"IT\",\"ECE\",\"ME\"];","import React, { useState, useContext, useRef } from \"react\";\nimport { semestersAndSubjects, branches } from \"./dataForPages\";\nimport {\n  Button,\n  Select,\n  Checkbox,\n  Input,\n  FormControl,\n  FormLabel,\n  HStack,\n  Stack,\n} from \"@chakra-ui/react\";\nimport { userLoginCredentialsContext } from \"../App\";\n\nfunction AccountSignUp() {\n  const [isStudent, setIsStudent] = useState(null);\n  const [semesterIndex, setSemesterIndex] = useState();\n  const [userName, setUserName] = useState(null);\n  const [userID, setUserId] = useState(null);\n  const [userSemester, setUserSemester] = useState(null);\n  const [userPassword, setUserPassword] = useState(null);\n  const [userBranchOrSubject, setUserBranchOrSubject] = useState(null);\n  const [isChecked, setIsChecked] = useState([false, false]);\n  const subjectRef=useRef();\n  const branchRef=useRef();\n  const dropDowns = [subjectRef,branchRef];\n  const allUserInputFieldsValues = [\n    userName,\n    userID,\n    userSemester,\n    userBranchOrSubject,\n    userPassword,\n  ];\n  const allUserInputFieldStateHooks = [\n    setUserName,\n    setUserId,\n    setUserSemester,\n    setUserPassword,\n    setUserBranchOrSubject,\n  ];\n  const userLoginCredentials = useContext(userLoginCredentialsContext);\n\n  async function createUserAccount(userObject) {\n    const params = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        id: userLoginCredentials.id,\n        password: userLoginCredentials.password,\n        user: userObject,\n      }),\n    };\n    try {\n      const response = await fetch(\n        \"http://localhost:5000/admin/adduser\",\n        params\n      );\n      const responeJson = await response.json();\n      console.log(\"response on creating account: \", responeJson);\n    } catch (error) {\n      console.log(\"error in creating account: \", error);\n    }\n  }\n  return (\n    <div className=\"AccountSignUp flex__container\">\n      <div className=\"Form\">\n        <FormControl width=\"50%\">\n          <HStack spacing=\"45px\" marginBottom=\"1rem\">\n            <FormLabel fontSize=\"1.5rem\" boxSizing=\"border-box\">\n              ID\n            </FormLabel>\n            <Input\n              type=\"text\"\n              border=\"6px solid black\"\n              boxSizing=\"border-box\"\n              value={userID}\n              onChange={(e) => setUserId(e.target.value)}\n            ></Input>\n          </HStack>\n          <HStack spacing=\"24px\" marginBottom=\"1rem\">\n            <FormLabel fontSize=\"1.5rem\">Name</FormLabel>\n            <Input\n              type=\"text\"\n              border=\"6px solid black\"\n              boxSizing=\"border-box\"\n              value={userName}\n              onChange={(e) => setUserName(e.target.value)}\n            ></Input>\n          </HStack>\n          <HStack spacing=\"45px\" marginBottom=\"1rem\">\n            <FormLabel fontSize=\"1.5rem\" boxSizing=\"border-box\">\n              User Password\n            </FormLabel>\n            <Input\n              type=\"text\"\n              border=\"6px solid black\"\n              boxSizing=\"border-box\"\n              value={userPassword}\n              onChange={(e) => setUserPassword(e.target.value)}\n            ></Input>\n          </HStack>\n          <HStack spacing=\"45px\" marginBottom=\"1rem\">\n            <FormLabel fontSize=\"1.5rem\" boxSizing=\"border-box\">\n              Semester\n            </FormLabel>\n            <Select\n              placeholder=\"select semester\"\n              size=\"lg\"\n              border=\"6px solid black\"\n              boxSizing=\"border-box\"\n              onChange={(e) => {\n                setSemesterIndex(e.target.value);\n                setUserSemester(semestersAndSubjects[e.target.value].semester);\n              }}\n            >\n              {semestersAndSubjects.map((e, index) => (\n                <option key={index} value={index}>\n                  {e.semester}\n                </option>\n              ))}\n            </Select>\n          </HStack>\n          <FormLabel fontSize=\"1.7rem\">Role:</FormLabel>\n          <Stack\n            spacing=\"23px\"\n            marginBottom=\"1rem\"\n            direction=\"column\"\n            padding=\"1rem\"\n          >\n            <Checkbox\n              size=\"lg\"\n              isChecked={isChecked[0]}\n              onChange={() => {\n                setIsStudent(true);\n                setIsChecked([true, false]);\n              }}\n            >\n              Student\n            </Checkbox>\n            <Checkbox\n              size=\"lg\"\n              isChecked={isChecked[1]}\n              onChange={() => {\n                setIsStudent(false);\n                setIsChecked([false, true]);\n              }}\n            >\n              Teacher\n            </Checkbox>\n          </Stack>\n          <Stack spacing=\"23px\" marginBottom=\"1rem\" direction=\"row\">\n            <FormLabel fontSize=\"1.5rem\" boxSizing=\"border-box\">\n              Subject\n            </FormLabel>\n            <Select\n              ref={subjectRef}\n              placeholder=\"Select Subject\"\n              size=\"lg\"\n              border=\"6px solid black\"\n              boxSizing=\"border-box\"\n              isDisabled={isStudent}\n              onChange={(e) =>\n                setUserBranchOrSubject([\"subject\", e.target.value])\n              }\n            >\n              {semestersAndSubjects[semesterIndex]?.subjects.map((e, index) => (\n                <option key={index} value={e}>\n                  {e}\n                </option>\n              ))}\n            </Select>\n          </Stack>\n          <HStack spacing=\"45px\" marginBottom=\"1rem\">\n            <FormLabel fontSize=\"1.5rem\" boxSizing=\"border-box\">\n              Branch\n            </FormLabel>\n            <Select\n              ref={branchRef}\n              placeholder=\"Select Branch\"\n              size=\"lg\"\n              border=\"6px solid black\"\n              boxSizing=\"border-box\"\n              isDisabled={!isStudent}\n              onChange={(e) =>\n                setUserBranchOrSubject([\"branch\", e.target.value])\n              }\n            >\n              {branches.map((e, index) => (\n                <option key={index} value={e}>\n                  {e}\n                </option>\n              ))}\n            </Select>\n          </HStack>\n          <Stack spacing=\"23px\" marginBottom=\"1rem\" direction=\"row\">\n            <Button\n              loadingText=\"Submitting\"\n              colorScheme=\"blue\"\n              fontSize=\"1.5rem\"\n              onClick={() => {\n                if (\n                  allUserInputFieldsValues.filter((e) => !e || e === \"\").length\n                ) {\n                  alert(\"Please fill all the fields\");\n                  return;\n                }\n                const userObject = {\n                  id: userID,\n                  name: userName,\n                  [userBranchOrSubject[0]]: userBranchOrSubject[1],\n                  role: isStudent ? \"student\" : \"teacher\",\n                  password: userPassword,\n                  [userSemester]: true,\n                };\n                createUserAccount(userObject);\n                console.log(\"userobject: \", userObject);\n              }}\n            >\n              Create Account\n            </Button>\n            <Button\n              loadingText=\"Submitting\"\n              colorScheme=\"red\"\n              fontSize=\"1.5rem\"\n              onClick={() => {\n                allUserInputFieldStateHooks.map((e) => e(\"\"));\n                setIsChecked([false, false]);\n                dropDowns.map(e=>e.current.options.selectedIndex = 0)\n              }}\n            >\n              Cancel\n            </Button>\n          </Stack>\n        </FormControl>\n      </div>\n    </div>\n  );\n}\n\nexport default AccountSignUp;\n","import {\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n} from \"@chakra-ui/react\";\n\nfunction DataShowingTable({ data }) {\n  return (\n    <div>\n      <Table colorScheme=\"black\" size=\"lg\">\n        <Thead>\n          <Tr>\n            {data?.tableHeader.map((e, index) => (\n              <Th key={index}>{e}</Th>\n            ))}\n          </Tr>\n        </Thead>\n        <Tbody>\n          {data?.type.map((e, index) =>\n            data?.tableHeader.length === 3 ? (\n              <Tr key={index}>\n                <Td>{e.name}</Td>\n                <Td>{e.branch}</Td>\n                <Td>{e.marks}</Td>\n              </Tr>\n            ) : (\n              <Tr>\n                <Td>{e.name}</Td>\n                <Td>{e.subject}</Td>\n              </Tr>\n            )\n          )}\n        </Tbody>\n      </Table>\n    </div>\n  );\n}\n\nexport default DataShowingTable;\n","import React, { useRef, useEffect, useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Tabs,\n  TabList,\n  TabPanels,\n  Tab,\n  TabPanel,\n  Button,\n  Stack,\n} from \"@chakra-ui/react\";\nimport DataShowingTable from \"./DataShowingTable\";\nimport { userLoginCredentialsContext } from \"../../App\";\n\nfunction AdminDashboard() {\n  const student = useRef(null);\n  const [semester, setSemester] = useState(\"sem1\");\n  const [tableHeader, setTableHeader] = useState([\n    \"Students Name\",\n    \"Branch\",\n    \"Marks\",\n  ]);\n  const [dataObject, setDataObject] = useState();\n  const userLoginCredentials = useContext(userLoginCredentialsContext); \n  const tabLists = [\n    \"sem1\",\n    \"sem2\",\n    \"sem3\",\n    \"sem4\",\n    \"sem5\",\n    \"sem6\",\n    \"sem7\",\n    \"sem8\",\n  ];\n\n  useEffect(() => {\n    async function fetchData() {\n      const responseJson = await fetchRecords();\n      console.log(\"before setting dataObject: \", tableHeader);\n      if (tableHeader[0] === \"Students Name\")\n        setDataObject({ tableHeader, type: responseJson.students });\n      else setDataObject({ tableHeader, type: responseJson.teachers });\n    }\n    async function fetchRecords() {\n      const params = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n        body: JSON.stringify({\n          id: userLoginCredentials.id, \n          password: userLoginCredentials.password, \n        }),\n      };\n      try {\n        console.log(\"params is: \", params);\n        const response = await fetch(\n          `http://localhost:5000/admin/dashboard?semester=${semester}`,\n          params\n        );\n        const responeJson = await response.json();\n        return Promise.resolve(responeJson);\n      } catch (error) {\n        console.log(\"error in admin: \", error);\n      }\n    }\n    fetchData();\n  }, [semester, tableHeader,userLoginCredentials.id,userLoginCredentials.password]); \n  useEffect(() => {\n    student.current.focus();\n  }, []);\n  return (\n    <div className=\"AdminDashboard flex__container\">\n      <Link to=\"/accountsignup\">\n        <button className=\"uploadButton\">Create Account</button>\n      </Link>\n      <div className=\"dashboard\">\n        <div className=\"teacher__student\">\n          <Stack spacing={4} direction=\"column\" align=\"center\">\n            <Button\n              ref={student}\n              colorScheme=\"blue\"\n              variant=\"outline\"\n              isFullWidth\n              _focus={{ color: \"white\", bg: \"#265FAE\" }}\n              onClick={() =>\n                setTableHeader([\"Students Name\", \"Branch\", \"Marks\"])\n              }\n            >\n              Students\n            </Button>\n            <Button\n              colorScheme=\"blue\"\n              variant=\"outline\"\n              isFullWidth\n              _focus={{ color: \"white\", bg: \"#265FAE\" }}\n              onClick={() => setTableHeader([\"Teachers Name\", \"Subject\"])}\n            >\n              Teachers\n            </Button>\n          </Stack>\n        </div>\n        <div className=\"data\">\n          <Tabs variant=\"enclosed\">\n            <TabList>\n              {tabLists.map((e, index) => (\n                <Tab\n                  key={index}\n                  _selected={{ color: \"white\", bg: \"#265FAE\" }}\n                  onClick={(e) => {\n                    setSemester(e.target.innerHTML);\n                  }}\n                >\n                  {e}\n                </Tab>\n              ))}\n            </TabList>\n            <TabPanels>\n              {tabLists.map(() => (\n                <TabPanel>\n                  <DataShowingTable data={dataObject} />\n                </TabPanel>\n              ))}\n            </TabPanels>\n          </Tabs>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AdminDashboard;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route} from \"react-router-dom\";\nimport AccountSignUp from \"./AccountSignUp\";\nimport AdminDashboard from \"./components/Admin\";\n\nfunction Admin() {\n  return (\n    <BrowserRouter>\n        <Switch>\n          <Route path=\"/accountsignup\" component={AccountSignUp} />\n          <Route path=\"/\" component={AdminDashboard}/>\n        </Switch>\n      \n    </BrowserRouter>\n  );\n}\n\nexport default Admin;\n","import { createContext, useState } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport StudentDashboard from \"./authPages/StudentDashboard\";\nimport NavBar from \"./landingPage/components/NavBar\";\nimport Teachers from \"./authPages/Teachers\";\nimport Admin from \"./authPages/Admin\";\n\nexport const userLoginCredentialsContext = createContext();\nexport const setUserLoginCredentialsContext = createContext();\n\nfunction App() {\n  const [userLoginCredentials, setUserLoginCredentials] = useState(null);\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <NavBar />\n        <userLoginCredentialsContext.Provider value={userLoginCredentials}>\n          <Switch>\n            {userLoginCredentials &&\n            userLoginCredentials.route === \"Admin\" &&\n            (userLoginCredentials.isUser === undefined ||\n            userLoginCredentials.isUser === true\n              ? true\n              : false) ? (\n              <Route path=\"/admin/dashboard\" component={Admin} />\n            ) : (\n              0\n            )}\n            {userLoginCredentials &&\n            userLoginCredentials.route === \"Teacher\" &&\n            (userLoginCredentials.isUser === undefined ||\n            userLoginCredentials.isUser === true\n              ? true\n              : false) ? (\n              <Route path=\"/teacher/dashboard\" component={Teachers}></Route>\n            ) : (\n              0\n            )}\n            {userLoginCredentials &&\n            userLoginCredentials.route === \"Student\" &&\n            (userLoginCredentials.isUser === undefined ||\n            userLoginCredentials.isUser === true\n              ? true\n              : false) ? (\n              <Route path=\"/student/dashboard\" component={StudentDashboard} />\n            ) : (\n              0\n            )}\n            <setUserLoginCredentialsContext.Provider\n              value={setUserLoginCredentials}\n            >\n              <Route path=\"/\" component={Home}></Route>\n            </setUserLoginCredentialsContext.Provider>\n          </Switch>\n        </userLoginCredentialsContext.Provider>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./pages/App\";\nimport \"./dist/index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}